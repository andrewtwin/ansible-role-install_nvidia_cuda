---
- name: Enable contrib apt repository
  tags: debian
  notify: Update apt cache
  ansible.builtin.apt_repository:
    repo: 'deb http://deb.debian.org/debian/ {{ os_short_name }} contrib'
    state: present

- name: Extra tasks for open drivers
  tags: debian
  when: driver_package | regex_search('open', ignorecase=true)
  ansible.builtin.apt:
    name: "{{ open_package_list }}"
    state: present

- name: Install cuda-keyring package
  tags: debian
  notify: Update apt cache
  ansible.builtin.apt:
    deb: "https://developer.download.nvidia.com/compute/cuda/repos/\
         {{ distro }}/{{ os_arch }}/cuda-keyring_1.1-1_all.deb"
    state: present
    allow_unauthenticated: true

- name: Run handler
  ansible.builtin.meta: flush_handlers

- name: Install drivers
  when: driver_packages
  block:
    - name: Install the driver packages
      tags: debian
      notify: Reboot
      loop: "{{ driver_package_list }}"
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        autoremove: "{{ allow_autoremove }}"

    - name: Disable the nouveau drivers
      tags: debian
      notify:
        - Update initramfs
        - Reboot
      ansible.builtin.template:
        src: templates/modprobe.j2
        dest: /etc/modprobe.d/blacklist-nouveau.conf
        owner: root
        group: root
        mode: "644"

- name: Remove drivers
  when: not driver_packages
  block:
    - name: Remove the driver packages
      tags: debian
      notify: Reboot
      ansible.builtin.apt:
        name: "{{ driver_package_list }}"
        state: absent
        autoremove: "{{ allow_autoremove }}"

    - name: Renable the nouveau drivers
      tags: debian
      notify:
        - Update initramfs
        - Reboot
      ansible.builtin.file:
        path: /etc/modprobe.d/blacklist-nouveau.conf
        state: absent

- name: Install the cuda packages
  tags: debian
  notify: Reboot
  loop: "{{ cuda_package_list }}"
  when: cuda_packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    autoremove: "{{ allow_autoremove }}"

- name: Remove the cuda packages
  tags: debian
  notify: Reboot
  when: not cuda_packages
  ansible.builtin.apt:
    name: "{{ cuda_package_list }}"
    state: absent
    autoremove: "{{ allow_autoremove }}"

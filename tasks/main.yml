---
- name: Set distro to rhel
  when: ansible_facts['distribution'] == "RedHat"
  ansible.builtin.set_fact:
    distro: "rhel{{ ansible_facts['distribution_major_version'] }}"

- name: Enable required RedHat repos for RHEL
  when: ansible_facts['distribution'] == "RedHat"
  loop:
  - "rhel-{{ ansible_facts['distribution_major_version'] }}-for-{{ ansible_facts['architecture'] }}-appstream-rpms"
  - "rhel-{{ ansible_facts['distribution_major_version'] }}-for-{{ ansible_facts['architecture'] }}-baseos-rpms"
  - "codeready-builder-for-rhel-{{ ansible_facts['distribution_major_version'] }}-{{ ansible_facts['architecture'] }}-rpms"
  community.general.dnf_config_manager:
    name: "{{ item }}"
    state: enabled

- name: Install EPEL repo
  ansible.builtin.dnf:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_facts['distribution_major_version'] }}.noarch.rpm"
    state: present
    disable_gpg_check: True

- name: Add the NVIDIA Repo for RHEL
  ansible.builtin.uri:
    url: "https://developer.download.nvidia.com/compute/cuda/repos/{{ distro }}/{{ ansible_facts['architecture'] }}/cuda-{{ distro }}.repo"
    dest: /etc/yum.repos.d/cuda.repo
    owner: root
    group: root
    mode: "644"
    status_code:
    - 200
    - 304

- name: Install packages for RHEL
  when: ansible_facts['distribution'] == "RedHat"
  ansible.builtin.dnf:
    name: "{{ rhel_packages }}"
    state: present
    update_cache: True

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Enable nvidia-persistence service
  when: ansible_facts['packages']['nvidia-persistenced'] is defined
  ansible.builtin.service:
    name: nvidia-persistenced
    enabled: True

- name: Disable the nouveau drivers
  notify:
  - Run dracut
  - Reboot
  ansible.builtin.template:
    src: templates/modprobe.j2  
    dest: /etc/modprobe.d/blacklist-nouveau.conf
    owner: root
    group: root
    mode: "644"
